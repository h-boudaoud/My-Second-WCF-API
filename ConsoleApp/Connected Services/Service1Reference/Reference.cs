//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp.Service1Reference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service1Reference.IService1")]
    internal interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        string DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBalance", ReplyAction="http://tempuri.org/IService1/GetBalanceResponse")]
        System.Nullable<decimal> GetBalance(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBalance", ReplyAction="http://tempuri.org/IService1/GetBalanceResponse")]
        System.Threading.Tasks.Task<System.Nullable<decimal>> GetBalanceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountById", ReplyAction="http://tempuri.org/IService1/GetAccountByIdResponse")]
        SOAP_WCF_Solution.Models.Account GetAccountById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountById", ReplyAction="http://tempuri.org/IService1/GetAccountByIdResponse")]
        System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Account> GetAccountByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountsList", ReplyAction="http://tempuri.org/IService1/GetAccountsListResponse")]
        SOAP_WCF_Solution.Models.Account[] GetAccountsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountsList", ReplyAction="http://tempuri.org/IService1/GetAccountsListResponse")]
        System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Account[]> GetAccountsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOperatiosList", ReplyAction="http://tempuri.org/IService1/GetOperatiosListResponse")]
        SOAP_WCF_Solution.Models.Operation[] GetOperatiosList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOperatiosList", ReplyAction="http://tempuri.org/IService1/GetOperatiosListResponse")]
        System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> GetOperatiosListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOperationsListOfAccount", ReplyAction="http://tempuri.org/IService1/GetOperationsListOfAccountResponse")]
        SOAP_WCF_Solution.Models.Operation[] GetOperationsListOfAccount(int AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOperationsListOfAccount", ReplyAction="http://tempuri.org/IService1/GetOperationsListOfAccountResponse")]
        System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> GetOperationsListOfAccountAsync(int AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAccount", ReplyAction="http://tempuri.org/IService1/AddAccountResponse")]
        SOAP_WCF_Solution.Models.Account[] AddAccount(string Name, decimal InitialBalance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAccount", ReplyAction="http://tempuri.org/IService1/AddAccountResponse")]
        System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Account[]> AddAccountAsync(string Name, decimal InitialBalance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOperation", ReplyAction="http://tempuri.org/IService1/AddOperationResponse")]
        SOAP_WCF_Solution.Models.Operation[] AddOperation(int accountId, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOperation", ReplyAction="http://tempuri.org/IService1/AddOperationResponse")]
        System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> AddOperationAsync(int accountId, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferMoney", ReplyAction="http://tempuri.org/IService1/TransferMoneyResponse")]
        SOAP_WCF_Solution.Models.Operation[] TransferMoney(int debitAccountId, int creditAccountId, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferMoney", ReplyAction="http://tempuri.org/IService1/TransferMoneyResponse")]
        System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> TransferMoneyAsync(int debitAccountId, int creditAccountId, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WCF_Service.CompositeType GetDataUsingDataContract(WCF_Service.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WCF_Service.CompositeType> GetDataUsingDataContractAsync(WCF_Service.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IService1Channel : ConsoleApp.Service1Reference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class Service1Client : System.ServiceModel.ClientBase<ConsoleApp.Service1Reference.IService1>, ConsoleApp.Service1Reference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork() {
            return base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public System.Nullable<decimal> GetBalance(int id) {
            return base.Channel.GetBalance(id);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<decimal>> GetBalanceAsync(int id) {
            return base.Channel.GetBalanceAsync(id);
        }
        
        public SOAP_WCF_Solution.Models.Account GetAccountById(int id) {
            return base.Channel.GetAccountById(id);
        }
        
        public System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Account> GetAccountByIdAsync(int id) {
            return base.Channel.GetAccountByIdAsync(id);
        }
        
        public SOAP_WCF_Solution.Models.Account[] GetAccountsList() {
            return base.Channel.GetAccountsList();
        }
        
        public System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Account[]> GetAccountsListAsync() {
            return base.Channel.GetAccountsListAsync();
        }
        
        public SOAP_WCF_Solution.Models.Operation[] GetOperatiosList() {
            return base.Channel.GetOperatiosList();
        }
        
        public System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> GetOperatiosListAsync() {
            return base.Channel.GetOperatiosListAsync();
        }
        
        public SOAP_WCF_Solution.Models.Operation[] GetOperationsListOfAccount(int AccountId) {
            return base.Channel.GetOperationsListOfAccount(AccountId);
        }
        
        public System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> GetOperationsListOfAccountAsync(int AccountId) {
            return base.Channel.GetOperationsListOfAccountAsync(AccountId);
        }
        
        public SOAP_WCF_Solution.Models.Account[] AddAccount(string Name, decimal InitialBalance) {
            return base.Channel.AddAccount(Name, InitialBalance);
        }
        
        public System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Account[]> AddAccountAsync(string Name, decimal InitialBalance) {
            return base.Channel.AddAccountAsync(Name, InitialBalance);
        }
        
        public SOAP_WCF_Solution.Models.Operation[] AddOperation(int accountId, decimal amount) {
            return base.Channel.AddOperation(accountId, amount);
        }
        
        public System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> AddOperationAsync(int accountId, decimal amount) {
            return base.Channel.AddOperationAsync(accountId, amount);
        }
        
        public SOAP_WCF_Solution.Models.Operation[] TransferMoney(int debitAccountId, int creditAccountId, decimal amount) {
            return base.Channel.TransferMoney(debitAccountId, creditAccountId, amount);
        }
        
        public System.Threading.Tasks.Task<SOAP_WCF_Solution.Models.Operation[]> TransferMoneyAsync(int debitAccountId, int creditAccountId, decimal amount) {
            return base.Channel.TransferMoneyAsync(debitAccountId, creditAccountId, amount);
        }
        
        public WCF_Service.CompositeType GetDataUsingDataContract(WCF_Service.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WCF_Service.CompositeType> GetDataUsingDataContractAsync(WCF_Service.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
